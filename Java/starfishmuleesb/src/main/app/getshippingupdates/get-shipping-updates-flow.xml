<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">
    <http:request-config name="HTTP_Get_Shipping_Updates_Request_Configuration" host="${starfish.api.getshippingupdates.host}" port="${starfish.api.getshippingupdates.port}" basePath="${starfish.api.getshippingupdates.path}" doc:name="HTTP Request Configuration"/>
    <flow name="get-shipping-updates-flowFlow">
        <http:listener config-ref="http-localhost-listener-configuration" path="/logistic/getShippingUpdates" allowedMethods="POST" doc:name="HTTP"/>
        <json:json-to-object-transformer returnClass="com.starfish.muleesb.domain.shippingupdates.oms.RequestData" doc:name="json-to-object"/>
        <choice doc:name="check-token">
            <when expression="#[message.inboundProperties.Authorization != '${starfish.api.getshippingupdates.accesstoken}' &amp;&amp; message.inboundProperties.'http.query.params'.access_token != '${starfish.api.getshippingupdates.accesstoken}']">
                <message-properties-transformer doc:name="set-status-403">
                    <add-message-property key="http.status" value="403"/>
                </message-properties-transformer>
                <set-payload value="Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here." doc:name="clear-payload"/>
            </when>
            <when expression="#[payload.clientId == null || payload.clientId == &quot;&quot; || payload.secretKey == null || payload.secretKey == &quot;&quot;]">
                <set-payload value="{&quot;result&quot;:null,&quot;message&quot;:&quot;Parameters 'clientId' and / or 'secretKey not found'&quot;,&quot;success&quot;:false}" doc:name="set-payload" mimeType="application/json"/>
            </when>
            <otherwise>
                <scripting:transformer doc:name="build-request-object">
                    <scripting:script engine="Groovy"><![CDATA[com.starfish.muleesb.domain.shippingupdates.sdek.request.SdekRequestData request = new com.starfish.muleesb.domain.shippingupdates.sdek.request.SdekRequestData();
request.setShowHistory(0);
request.setShowReturnOrder(0);
request.setShowReturnOrderHistory(0);
request.setOrders(null);

com.starfish.muleesb.domain.shippingupdates.sdek.request.ChangePeriod changePeriod = new com.starfish.muleesb.domain.shippingupdates.sdek.request.ChangePeriod();
changePeriod.setDateFirst(payload.getFrom());
changePeriod.setDateLast(payload.getTill());
request.setChangePeriod(changePeriod);

java.util.Date currentDate = new java.util.Date();

java.text.SimpleDateFormat dateFormatter = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
java.lang.String stringDate = dateFormatter.format(currentDate);
java.lang.String strForSecure = stringDate + "&" + payload.getSecretKey();
java.lang.String secure = org.apache.commons.codec.digest.DigestUtils.md5Hex(strForSecure);

request.setDate(stringDate);
request.setAccount(payload.getClientId());
request.setSecure(secure);

payload = request;]]></scripting:script>
                </scripting:transformer>
                <custom-transformer class="com.starfish.muleesb.transformers.CustomJaxbObjectToXmlTransformer" doc:name="custom-jaxb-object-to-xml">
                	<spring:property name="beanName" value="shippingUpdatesJaxbContext"/>
            	</custom-transformer>
                <set-property propertyName="Content-Type" value="application/xml" doc:name="set-content-type-xml"/>
                <http:request config-ref="HTTP_Get_Shipping_Updates_Request_Configuration" path="/" method="POST" doc:name="http-send-request-to-sdek"/>
                <object-to-string-transformer doc:name="object-to-string"/>
                <custom-transformer class="com.starfish.muleesb.transformers.CustomXmlToJaxbObjectTransformer" doc:name="custom-xml-to-jaxb-object" returnClass="com.starfish.muleesb.domain.shippingupdates.sdek.response.SdekResponseData">
                	<spring:property name="beanName" value="shippingUpdatesJaxbContext"/>
            	</custom-transformer>
                <invoke object-ref="shippingUpdatesDataConverter" method="convert" methodArguments="#[payload]" methodArgumentTypes="com.starfish.muleesb.domain.shippingupdates.sdek.response.SdekResponseData" doc:name="convert-data"/>
                <json:object-to-json-transformer doc:name="object-to-json"/>
            </otherwise>
        </choice>
    </flow>
</mule>
